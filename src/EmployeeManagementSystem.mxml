<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" 
			   applicationComplete="{myServ.send()}" xmlns:Components="Components.*" creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:HTTPService id="myServ" url="employeeDataset.xml" fault="myServ_faultHandler(event)" result="myServ_resultHandler(event)"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			
			[Bindable]public var _employeesArray:ArrayCollection;
			[Bindable]public var _newemployeesArray:ArrayCollection=new ArrayCollection();;
			[Bindable]public var _newemployees:ArrayCollection=new ArrayCollection();
			[Bindable] private var dgIndex:int = new int();  //hold the dataGrid selectedIndex value
			[Bindable] private var vScroll:int = new int();  //hold the dataGrid verticalScroll position
			
			private var _filterString:String;
			
			public function init():void
			{
				try
				{
					txtEmployee.text='';
					dgEmployee.dataProvider=_employeesArray;
					clearInputs();
				} 
				catch(e:Error) 
				{
					
				}
				
			}
			
			protected function txtEmployee_enterHandler(filterString:String):void
			{
				if(filterString==''||null)
				{
					_employeesArray=_newemployees;
					_employeesArray.refresh();
					dgEmployee.dataProvider=_employeesArray;
				}
				else
				{
					_filterString = StringUtil.trim(filterString);
					_filterString = _filterString.toLowerCase();
					_employeesArray.filterFunction =filter;
					_employeesArray.refresh();
				}
			}
			
			
			public function filter(item:Object):Boolean
			{
				if(item.name.toLowerCase().search(txtEmployee.text.toLowerCase()) != -1)
				{
					return true;
				}
				var age:String=item.age;
				if(age.toString().toLowerCase().search(txtEmployee.text.toLowerCase()) != -1)
				{
					return true;
				}
				if(item.nickname.toLowerCase().search(txtEmployee.text.toLowerCase()) != -1)
				{
					return true;
				}
				var sal:String=item.salary;
				if(sal.toString().toLowerCase().search(txtEmployee.text.toLowerCase()) != -1)
				{
					return true;
				}
				
				return false;
			}
			
			protected function myServ_faultHandler(event:FaultEvent):void
			{
				Alert.show("Cannot Load Data");
				
			}
			
			protected function myServ_resultHandler(event:ResultEvent):void
			{
				
				if(event.result.employee is ArrayCollection)
				{
					this._employeesArray =event.result.employee as ArrayCollection 
				}
				else
				{
					var buffer:ArrayCollection= new ArrayCollection([event.result.employee]);
					this._employeesArray = buffer;
				}
				this._newemployees=this._employeesArray;
			}
			
			private function addEmployee():void
			{
				dgIndex = _employeesArray.length + 1;
				vScroll = dgIndex +4;
				dgEmployee.validateNow();
				dgEmployee.verticalScrollPosition = dgIndex-10;
				dgEmployee.selectedIndex = dgIndex;
			}
			
			public function submitDetails():void {
				
				if((empName.text=='' ||null)||(empAge.text=='' ||null)||(empNickname.text=='' ||null)||(empSal.text=='' ||null))
				{
					Alert.show("Please input value in the missing fields");
				}
				else
				{
					var dgRowNum :int=_employeesArray.length + 1;
					
					_employeesArray.addItem({rownum:dgRowNum, name:empName.text, age:empAge.text,nickname:empNickname.text, salary:empSal.text, status:0});
					
					clearInputs();
				}
			}
			private function clearInputs():void
			{
				empName.text='';
				empAge.text='';
				empNickname.text='';
				empSal.text='';
			}
			protected function Status_clickHandler(empstatus:String):void
			{
				_employeesArray = _newemployees;
				var copy_object:Object;
				_newemployeesArray.removeAll();
				
				
				for(var j:int=0;j<(_employeesArray.length);j++)
				{
					if(empstatus == '1' &&_employeesArray[j].status=='1')
					{
						copy_object=_employeesArray.getItemAt(j);
						_newemployeesArray.addItem(copy_object);
						
					}
					else if(empstatus == '0' &&_employeesArray[j].status=='0')
					{
						copy_object=_employeesArray.getItemAt(j);
						_newemployeesArray.addItem(copy_object);
						
					}
					else{}
					
				}
				_employeesArray=_newemployeesArray;
				_employeesArray.refresh();
			}
			
			
		]]>
	</fx:Script>
	
	
		<fx:Style>
		@namespace Components "Components.*";
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		.dataGrid
		{
			header-colors:#f9f9f9, #ebebeb;
			alternating-item-colors:#ffffff, #ebebeb;
			roll-over-color:#c5c5c5;
			font-family:"Helvetica Neue";
			font-size:13px;
			color:#555555;
		}
	</fx:Style>
	
	<s:states>
		<s:State name="dgState"/>
		<s:State name="addState"/>
	</s:states>
	
	<s:Panel width="100%" height="100%">
		
		
		<mx:VBox width="100%" height="100%" paddingLeft="10" paddingTop="10">
			<s:BorderContainer width="100%" borderVisible="false">
				<s:Image source="VizExplorer.jpg"/>
			</s:BorderContainer>
			<mx:HBox width="100%" horizontalGap="10">
				<mx:HBox horizontalGap="5" width="20%">
					<s:TextInput id="txtEmployee" prompt="Type here to search" enter="txtEmployee_enterHandler(txtEmployee.text)" width="100%"/>
					<s:Image id="imgSearchIcon" source="searchIconSmall.png" click="txtEmployee_enterHandler(txtEmployee.text)"/>
				</mx:HBox>
				<Components:customGreenButton id="greenStatus" click="Status_clickHandler('1')"/>
				<Components:customRedButton id="redStatus" click="Status_clickHandler('0')"/>
			</mx:HBox>
			
			
			<mx:DataGrid id="dgEmployee" width="50%" height="50%" dataProvider="{_employeesArray}" styleName="dataGrid">
				<mx:columns>
					<mx:DataGridColumn headerText="#"  dataField="rownum" sortable="false" />
					<mx:DataGridColumn headerText="Name" dataField="name" sortable="true"/>
					<mx:DataGridColumn headerText="Age" dataField="age" sortable="true"/>
					<mx:DataGridColumn headerText="Nickname" dataField="nickname" sortable="true"/>
					<mx:DataGridColumn headerText="Salary" dataField="salary" sortable="true"/>
					<mx:DataGridColumn headerText="Status" >
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox horizontalAlign="center">
									
									<fx:Script>
										<![CDATA[
											import mx.controls.DataGrid;
											
											override public function set data( value:Object ) : void {
												super.data = value;
												colourRendering();
											}
											protected function chk_clickHandler(event:MouseEvent):void
											{
												if(chk.selected==true)
												{
													outerDocument._employeesArray[outerDocument.dgEmployee.selectedIndex].status=1;
													data.status=='1'
												}
												else
												{
													outerDocument._employeesArray[outerDocument.dgEmployee.selectedIndex].status=0;
													data.status=='0'
												}
												
												colourRendering();
											}
											private function colourRendering():void
											{
												var g:Graphics=graphics;
												g.clear();
												
												if(data.status=='1')
												{
													g.beginFill(0x008000,1);
													
												}
												else if(data.status=='0')
												{
													g.beginFill(0xFF0000,1);
													
												}
												g.drawRect(10, 0,unscaledWidth, unscaledHeight);
												g.endFill();
											}
											
											
										]]>
									</fx:Script>
									
									<s:CheckBox id="chk" selected="{data.status==1?true:false}" creationComplete="colourRendering()" click="chk_clickHandler(event)"/>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
						
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
			<mx:Form includeIn="addState">
				<mx:FormItem label="Name">
					<mx:TextInput id="empName" restrict="a-zA-Z"
								  maxChars="40"  width="200"/>
				</mx:FormItem>
				<mx:FormItem label="Age" >
					<mx:TextInput id="empAge" restrict="0-9"
								  maxChars="3" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="Nickname">
					<mx:TextInput id="empNickname" restrict="a-zA-Z"
								  maxChars="20" width="200"/>
				</mx:FormItem>
				<mx:FormItem label="Salary">
					<mx:TextInput id="empSal" restrict="0-9"
								  maxChars="10" width="200"/>
				</mx:FormItem>
				<mx:FormItem >
					<mx:Button id="btnsubmit" label="Submit" chromeColor="#4863A0" color="#FFFFFF" click="{currentState='dgState',submitDetails()}"/>
				</mx:FormItem>
			</mx:Form>
			<mx:HBox width="40%" horizontalAlign="center" includeIn="dgState" >
				<mx:Button id="btnAddEmployee" chromeColor="#4863A0" color="#FFFFFF" label="Add Employee" click="{currentState='addState', addEmployee()}"/>
			</mx:HBox>
		</mx:VBox>
	</s:Panel>
</s:Application>
